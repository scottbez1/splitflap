; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
src_dir = Splitflap

; Note: change this to the target environment to get VSCode to handle code
; completion, etc, correctly.
default_envs = uno-shift-register

[extra]
lib_deps =
    Adafruit NeoPixel@1.7.0
    Adafruit SSD1306@2.4.3
    Adafruit GFX Library@1.10.4

[env:uno-shift-register]
platform = atmelavr
board = uno
framework = arduino
monitor_speed = 38400
monitor_flags = --echo
lib_deps = ${extra.lib_deps}
build_flags =
    -DSPI_IO=true
    -DREVERSE_MOTOR_DIRECTION=false
    -DNEOPIXEL_DEBUGGING_ENABLED=true
    -DSSD1306_DISPLAY=false
    -DINA219_POWER_SENSE=false
    -DSPLITFLAP_PIO_HARDWARE_CONFIG

[env:uno-direct]
platform = atmelavr
board = uno
framework = arduino
monitor_speed = 38400
monitor_flags = --echo
lib_deps = ${extra.lib_deps}
build_flags =
    -DNUM_MODULES=3
    -DSPI_IO=false
    -DREVERSE_MOTOR_DIRECTION=false
    -DNEOPIXEL_DEBUGGING_ENABLED=true
    -DSSD1306_DISPLAY=false
    -DINA219_POWER_SENSE=false
    -DSPLITFLAP_PIO_HARDWARE_CONFIG

[env:mega-direct]
platform = atmelavr
board = megaatmega2560
framework = arduino
monitor_speed = 38400
monitor_flags = --echo
lib_deps = ${extra.lib_deps}
build_flags =
    -DSPI_IO=false
    -DREVERSE_MOTOR_DIRECTION=false
    -DNEOPIXEL_DEBUGGING_ENABLED=true
    -DSSD1306_DISPLAY=true
    -DINA219_POWER_SENSE=true
    -DSPLITFLAP_PIO_HARDWARE_CONFIG

[esp32base]
platform = espressif32
framework = arduino
board = esp32dev
upload_speed = 921600
monitor_speed = 921600
monitor_flags =
	--echo
	--filter=esp32_exception_decoder

; This would be much cleaner if we didn't need to preserve Arduino IDE compatibility and the splitflap
; module driver could be pulled out to its own library and shared properly... Instead, we remove the
; .ino file (referred to as .ino.cpp during the build) and add additional source.
src_filter = +<*> -<.git/> -<.svn/> -<example/> -<examples/> -<test/> -<tests/> -<Splitflap.ino.cpp> +<../esp32/core> +<../esp32/splitflap>

lib_deps =
    ${extra.lib_deps}
    TFT_eSPI@2.3.59
    PubSubClient@2.8

build_flags =
    -DSPI_IO=true
    -DSPLITFLAP_PIO_HARDWARE_CONFIG
    
    ; Uncomment to enable MQTT
    ; -DMQTT=true

    -DUSER_SETUP_LOADED=1
    -DST7789_DRIVER=1
    -DCGRAM_OFFSET=1
    -DTFT_WIDTH=135
    -DTFT_HEIGHT=240
    -DTFT_MISO=-1
    -DTFT_MOSI=19
    -DTFT_SCLK=18
    -DTFT_CS=5
    -DTFT_DC=16
    -DTFT_RST=23
    -DTFT_BL=4
    -DLOAD_GLCD=1
    -DLOAD_GFXFF=1
    -DSPI_FREQUENCY=40000000

[env:esp32]
extends=esp32base
build_flags =
    ${esp32base.build_flags}
    -DREVERSE_MOTOR_DIRECTION=false
    -DNUM_MODULES=120

[env:chainlink]
extends=esp32base
build_flags =
    ${esp32base.build_flags}
    -DCHAINLINK
    -DREVERSE_MOTOR_DIRECTION=false
    -DNUM_MODULES=120

[env:chainlinkDriverTester]
extends=esp32base
src_filter = +<*> -<.git/> -<.svn/> -<example/> -<examples/> -<test/> -<tests/> -<Splitflap.ino.cpp> +<../esp32/core> +<../esp32/tester>
build_flags =
    ${esp32base.build_flags}
    -DCHAINLINK
    -DCHAINLINK_DRIVER_TESTER
    -DREVERSE_MOTOR_DIRECTION=false
    -DNUM_MODULES=12
    -DINA219_POWER_SENSE=true
lib_deps =
    ${esp32base.lib_deps}
    adafruit/Adafruit MCP23017 Arduino Library @ ^1.3.0
build_type = debug
